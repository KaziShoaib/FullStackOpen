{"version":3,"sources":["services/phonebook.js","components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseURL","newObject","axios","post","then","response","data","get","id","delete","put","PersonForm","persons","setPersons","setMessage","setMessageType","useState","newName","setNewName","newNumber","setNewNumber","clearField","setTimeout","onSubmit","event","preventDefault","map","person","name","includes","window","confirm","_id","filter","phonebookService","number","returnedPerson","catch","error","console","log","status","concat","value","onChange","target","type","Person","removePerson","onClick","Persons","personsToShow","returnedObject","handleDelete","Filter","filterText","setFilterText","Notification","message","messageType","className","App","useEffect","initialPersons","toLowerCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c358268.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst baseURL = '/api/persons'\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseURL, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseURL}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject) => {\r\n  const request  = axios.put(`${baseURL}/${newObject.id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {create, getAll, remove, update}","import React, {useState} from \"react\"\r\n\r\nimport phonebookService from \"../services/phonebook\"\r\n\r\nconst PersonForm = ({persons, setPersons, setMessage, setMessageType}) => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const clearField = () => {\r\n    setNewName('')\r\n    setNewNumber('')\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n      setMessageType(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    \r\n    if(persons.map(person=>person.name).includes(newName)){\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n        const _id = persons.filter(person => person.name === newName)[0].id\r\n        const editedPerson = {\r\n          id: _id,\r\n          name: newName,\r\n          number : newNumber\r\n        }\r\n        phonebookService\r\n          .update(editedPerson)\r\n          .then(returnedPerson => {            \r\n            setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\r\n            setMessageType('success')\r\n            setMessage(`Successfully changed contact number of ${returnedPerson.name}`)\r\n            clearField()\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n            setMessageType('error')\r\n            if(error.response.status === 404){\r\n              setMessage(`Information of ${newName} has been removed from server`)\r\n              setPersons(persons.filter(person => person.id !== _id))\r\n            }\r\n            else if(error.response.status === 400)\r\n              setMessage(`${error.response.data.error}`)            \r\n            clearField()\r\n          })\r\n      }\r\n      \r\n    }\r\n    else { \r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n      }     \r\n      phonebookService\r\n        .create(newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setMessageType('success')\r\n          setMessage(`${newName} added`)\r\n          clearField() \r\n        })\r\n        .catch(error => {          \r\n          setMessageType('error')\r\n          setMessage(`${error.response.data.error}`)\r\n          clearField()\r\n        })\r\n           \r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n    <div>name: <input value={newName} onChange={handleNameChange}/></div>\r\n    <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\r\n    <div><button type=\"submit\">add</button></div>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from \"react\"\r\n\r\nimport phonebookService from \"../services/phonebook\"\r\n\r\nconst Person = ({person, removePerson}) => {\r\n  return (\r\n    <p>\r\n      {person.name} {person.number} \r\n      <button onClick={removePerson}>Delete</button>\r\n    </p>\r\n  )\r\n}\r\n\r\nconst Persons = ({personsToShow, persons, setPersons, setMessage, setMessageType}) => {\r\n  \r\n  const handleDelete = ({name, id}) => {   \r\n    \r\n    if(window.confirm(`Want to delete ${name}?`)){\r\n      phonebookService\r\n        .remove(id)\r\n        .then(returnedObject => {\r\n          console.log(returnedObject)\r\n          setPersons(persons.filter(person => person.id !== id))\r\n          setMessageType('success')\r\n          setMessage(`Successfully deleted ${name}`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n            setMessageType(null)\r\n          }, 5000)\r\n        })\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {personsToShow.map(person => \r\n        <Person \r\n          key={person.name} \r\n          person={person} \r\n          removePerson={() => handleDelete(person) }\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from \"react\"\r\n\r\nconst Filter = ({filterText, setFilterText}) => {\r\n  const handleFilterTextChange = (event) => {\r\n    setFilterText(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      filter shown with : <input value={filterText} onChange={handleFilterTextChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from \"react\"\r\n\r\nconst Notification = ({message, messageType}) => {\r\n  if(message === null)  \r\n    return null\r\n  const className = `message ${messageType}`\r\n  return (\r\n    <div className={className}> \r\n      {message}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from \"react\"\n\nimport PersonForm from \"./components/PersonForm\"\nimport Persons from \"./components/Persons\"\nimport Filter from \"./components/Filter\"\nimport Notification from \"./components/Notification\"\n\nimport phonebookService from \"./services/phonebook\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [filterText, setFilterText] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageType, setMessageType] = useState(null)\n\n  useEffect(()=>{\n    phonebookService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filterText.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageType={messageType}/>\n      <Filter filterText={filterText} setFilterText={setFilterText}/>\n      <h3>Add a new</h3>\n      <PersonForm \n        persons={persons} \n        setPersons={setPersons} \n        setMessage={setMessage}\n        setMessageType={setMessageType}\n      />\n      <h3>Numbers</h3>\n      <Persons \n        personsToShow={personsToShow} \n        persons={persons} \n        setPersons={setPersons}\n        setMessage={setMessage}\n        setMessageType={setMessageType}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />,document.getElementById('root'))\n\n\n"],"sourceRoot":""}